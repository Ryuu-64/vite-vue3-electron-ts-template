// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Bookmark {
  id          String   @id @default(uuid())
  url         String   @unique
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  categoryId  String
  tags        Tag[]    @relation("BookmarkTags")
  Category    Category @relation("BookmarkCategory", fields: [categoryId], references: [id])
}

model Category {
  id        String     @id @default(uuid())
  name      String
  bookmarks Bookmark[] @relation("BookmarkCategory")

  ancestorRelations   CategoryClosure[] @relation("ClosureAncestor")
  descendantRelations CategoryClosure[] @relation("ClosureDescendant")
}

model CategoryClosure {
  ancestorId   String // ID of the ancestor category
  descendantId String // ID of the descendant category
  depth        Int // Depth between ancestor and descendant

  ancestor   Category @relation("ClosureAncestor", fields: [ancestorId], references: [id])
  descendant Category @relation("ClosureDescendant", fields: [descendantId], references: [id])

  @@id([ancestorId, descendantId]) // Composite primary key
}

model Tag {
  id        String     @id @default(uuid())
  name      String
  bookmarks Bookmark[] @relation("BookmarkTags")
}
